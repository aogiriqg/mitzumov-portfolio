import React, { useEffect, useRef, useState, useCallback } from 'react';
import './App.css';
import StarryBackground from './StarryBackground';
import HeaderBar from './HeaderBar';
import { Sandpack } from '@codesandbox/sandpack-react';
import { FaReact, FaNodeJs, FaCss3Alt, FaGithub, FaChevronLeft, FaChevronRight } from 'react-icons/fa';
import Carousel from './components/Carousel';
import Preloader from './components/Preloader';

const characters = [
  {
    name: 'Mitzumov',
    img: 'https://i.imgur.com/1Q9Z1Zm.png', // –ú–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Å–≤–æ–π –∞—Ä—Ç
    style: { left: '38%', bottom: '22%' }
  },
  {
    name: 'Friend',
    img: 'https://i.imgur.com/2Q9Z1Zm.png', // –ú–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Å–≤–æ–π –∞—Ä—Ç
    style: { left: '52%', bottom: '22%' }
  }
];

// –ö–∞—Å—Ç–æ–º–Ω—ã–π –∫—É—Ä—Å–æ—Ä
const CustomCursor: React.FC = () => {
  const cursorRef = useRef<HTMLDivElement>(null);
  useEffect(() => {
    const move = (e: MouseEvent) => {
      if (cursorRef.current) {
        cursorRef.current.style.left = e.clientX + 'px';
        cursorRef.current.style.top = e.clientY + 'px';
      }
    };
    const activate = () => cursorRef.current?.classList.add('active');
    const deactivate = () => cursorRef.current?.classList.remove('active');
    window.addEventListener('mousemove', move);
    document.querySelectorAll('a,button,.header-btn').forEach(el => {
      el.addEventListener('mouseenter', activate);
      el.addEventListener('mouseleave', deactivate);
    });
    return () => {
      window.removeEventListener('mousemove', move);
      document.querySelectorAll('a,button,.header-btn').forEach(el => {
        el.removeEventListener('mouseenter', activate);
        el.removeEventListener('mouseleave', deactivate);
      });
    };
  }, []);
  return <div className="custom-cursor" ref={cursorRef} />;
};

// –ú—É–∑—ã–∫–∞–ª—å–Ω—ã–π —Ñ–æ–Ω
const MUSIC_LIST = [
  {
    name: 'KRISTIEE - Dirty',
    url: '/music/KRISTIEE - Dirty.mp3',
  },
];
const MusicPlayer: React.FC = () => {
  const [playing, setPlaying] = useState(false);
  const [track, setTrack] = useState(0);
  const [userStarted, setUserStarted] = useState(false);
  const audioRef = useRef<HTMLAudioElement>(null);

  useEffect(() => {
    if (audioRef.current) {
      playing ? audioRef.current.play() : audioRef.current.pause();
    }
  }, [playing, track]);

  if (!userStarted) {
    return (
      <div style={{ position: 'fixed', bottom: 24, right: 24, zIndex: 1000, background: '#181e36cc', borderRadius: 16, padding: '0.7rem 1.2rem', boxShadow: '0 2px 16px #0006', display: 'flex', alignItems: 'center', gap: 12 }}>
        <button onClick={() => { setUserStarted(true); setPlaying(true); }} style={{ fontSize: 18, fontWeight: 600, color: '#7f8fff', background: 'none', border: '2px solid #7f8fff', borderRadius: 12, padding: '0.5rem 1.2rem', cursor: 'pointer' }}>–í–∫–ª—é—á–∏—Ç—å –º—É–∑—ã–∫—É üéµ</button>
      </div>
    );
  }

  return (
    <div style={{ position: 'fixed', bottom: 24, right: 24, zIndex: 1000, background: '#181e36cc', borderRadius: 16, padding: '0.7rem 1.2rem', boxShadow: '0 2px 16px #0006', display: 'flex', alignItems: 'center', gap: 12 }}>
      <button onClick={() => setPlaying(p => !p)} style={{ fontSize: 18, marginRight: 8 }}>{playing ? '‚è∏' : '‚ñ∂Ô∏è'}</button>
      <span style={{ color: '#7f8fff', fontWeight: 600 }}>{MUSIC_LIST[track].name}</span>
      <button onClick={() => setTrack(t => (t + 1) % MUSIC_LIST.length)} style={{ fontSize: 18, marginLeft: 8 }}>‚è≠</button>
      <audio ref={audioRef} src={MUSIC_LIST[track].url} loop />
    </div>
  );
};

// Live Playground
const playgroundCode = `function Hello() {
  const [count, setCount] = React.useState(0);
  return (
    <div>
      <h3>Live Playground üëã</h3>
      <button onClick={() => setCount(count + 1)}>
        –ö–ª–∏–∫–Ω—É–ª–∏ {count} —Ä–∞–∑
      </button>
    </div>
  );
}
render(<Hello />);
`;

const IDEPanel: React.FC = () => (
  <div className="ide-panel">
    <div className="ide-header">
      <span className="ide-dot red" />
      <span className="ide-dot yellow" />
      <span className="ide-dot green" />
      <span className="ide-title">Simmoni Info</span>
    </div>
    <pre className="ide-content">
      <span className="ide-key">–ü—Ä–æ–µ–∫—Ç:</span> <a href="https://simmoni.ru/" target="_blank" rel="noopener noreferrer" className="ide-link">@https://simmoni.ru/</a>{'\n'}
      <span className="ide-key">Telegram:</span> <a href="https://t.me/Matvey_Lomanov" target="_blank" rel="noopener noreferrer" className="ide-link">@Matvey_Lomanov</a>{'\n'}
      <span className="ide-key">Discord server:</span> <a href="https://discord.gg/UaMf3u8XJg" target="_blank" rel="noopener noreferrer" className="ide-link">@https://discord.gg/UaMf3u8XJg</a>
    </pre>
  </div>
);

function App() {
  const [loading, setLoading] = useState(true);

  return (
    <div className="App">
      {loading && <Preloader onFinish={() => setLoading(false)} />}
      {!loading && (
        <>
          <CustomCursor />
          <MusicPlayer />
          <StarryBackground />
          <HeaderBar />
          <main>
            <Carousel
              autoPlay={false}
              interval={5000}
              showArrows={true}
              showDots={true}
            >
              <div>
                <div className="slide-content">
                  <h1>
                    –ü—Ä–∏–≤–µ—Ç, —è <span className="gradient-text">mitzumov</span> <span className="dev-badge">Fullstack Dev</span>
                  </h1>
                  <p className="subtitle">Fullstack web developer, 17 –ª–µ—Ç</p>
                  <div className="cta-buttons">
                    <a href="#projects" className="btn primary">–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã</a>
                  </div>
                  <IDEPanel />
                </div>
              </div>

              <div>
                <div className="slide-content">
                  <h2>–û–±–æ –º–Ω–µ</h2>
                  <p>–Ø fullstack-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –ª—é–±–∏—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∏ –∫—Ä–∞—Å–∏–≤—ã–µ —Å–∞–π—Ç—ã. –ú–Ω–µ 17 –ª–µ—Ç, —è –æ–±–æ–∂–∞—é –∞–Ω–∏–º–µ, –Ω–æ—á–Ω–æ–µ –Ω–µ–±–æ –∏ –Ω–µ–æ–±—ã—á–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã.</p>
                  <div className="skills">
                    <span><FaReact size={20} color="#61dafb" /> React</span>
                    <span><FaNodeJs size={20} color="#8cc84b" /> Node.js</span>
                    <span><FaCss3Alt size={20} color="#2965f1" /> CSS</span>
                    <span><FaGithub size={20} color="#7f8fff" /> GitHub</span>
                    <span>TypeScript</span>
                    <span>UI/UX</span>
                  </div>
                </div>
              </div>

              <div>
                <div className="slide-content">
                  <h2>–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã</h2>
                  <div className="project-list">
                    <div className="project-card">
                      <h3>–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç</h3>
                      <p>–û–ø–∏—Å–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –∫—Ä—É—Ç–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞. –ó–¥–µ—Å—å –º–æ–∂–µ—Ç –±—ã—Ç—å —Å—Å—ã–ª–∫–∞ –Ω–∞ GitHub –∏–ª–∏ –¥–µ–º–æ.</p>
                    </div>
                    <div className="project-card">
                      <h3>–ï—â–µ –æ–¥–∏–Ω –ø—Ä–æ–µ–∫—Ç</h3>
                      <p>–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞. –î–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–∏ —Ä–∞–±–æ—Ç—ã!</p>
                    </div>
                  </div>
                </div>
              </div>

              <div>
                <div className="slide-content">
                  <h2>Roadmap –¥–ª—è Fullstack by mitzumov</h2>
                  <div className="roadmap-editor">
                    <pre>{`1. –û—Å–Ω–æ–≤—ã:

‚Ä¢  HTML, CSS, JavaScript: –ë–∞–∑–∞ –¥–ª—è –ª—é–±–æ–≥–æ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞.
  ‚Ä¢  HTML (https://metanit.com/web/html5/)
  ‚Ä¢  CSS (https://metanit.com/web/html5/): 
  ‚Ä¢  JavaScript (https://metanit.com/web/javascript/): 
‚Ä¢  –û—Å–Ω–æ–≤—ã Git: –°–∏—Å—Ç–µ–º–∞ –∫–æ–Ω—Ç—Ä–æ–ª—è –≤–µ—Ä—Å–∏–π - MUST HAVE.
  ‚Ä¢  Git Tutorial: https://www.atlassian.com/git/tutorials

2. Frontend:

‚Ä¢  Vue.js: (–ù—É –µ—Å–ª–∏ –≤—ã —á–µ–ª–æ–≤–µ–∫ –Ω–µ —Ç—É–ø–æ–π —Ç–æ –ø–æ–π–º–µ—Ç, –≤–µ–¥—å –æ–Ω –ø—Ä–æ—â–µ)
  ‚Ä¢  Vue.js –¥–æ–∫—É–º–∫–∞: https://vuejs.org/
  ‚Ä¢  Vue.js (https://www.youtube.com/watch?v=qXhmJhR0Fhg&list=PL-wEcSTifrSn5cae0gFQ7Gy7v3t6c7hLF&ab_channel=JAVA%D0%98S%D0%9A%D0%A0%D0%98%D0%9F%D0%A2%D0%AB%2C%D1%81%D1%81%D1%8B%D0%BB%D0%BA%D0%B0%D0%BD%D0%B0%D0%BD%D0%BE%D0%B2%D1%8B%D0%BA%D0%B0%D0%BD%D0%B0%D0%BB%D0%B2%D0%BE%D0%BF%D0%B8%D1%81%D0%B0%D0%BD%D0%B8%D0%B8) (–Ø –Ω–µ —Å—Ç–∞–ª –∫—Ä–µ–ø–∏—Ç—å –≤—Å–µ —á—Ç–æ —Å–º–æ—Ç—Ä–µ–ª, –Ω–æ –¥–∞–Ω–Ω—ã–π –ø–∞–∫ –∑–∞—à–µ–ª –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–æ) 

‚Ä¢  –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ (–Ω–æ –ø–æ–ª–µ–∑–Ω–æ):
  ‚Ä¢  TypeScript: https://www.typescriptlang.org/ (—Å—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è —Ç–∏–ø–∏–∑–∞—Ü–∏—è –¥–ª—è JS)
  ‚Ä¢  Metanit TS (https://metanit.com/web/typescript/)

3. Backend:

‚Ä¢  –Ø–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è: (–í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω, —É–≥–ª—É–±–ª—è–π—Å—è –≤ –Ω–µ–≥–æ)
  ‚Ä¢  Node.js (JavaScript): https://nodejs.org/ (Express.js - –ø–æ–ø—É–ª—è—Ä–Ω—ã–π —Ñ—Ä–µ–π–º–≤–æ—Ä–∫)
  ‚Ä¢  Python: https://www.python.org/ (Django –∏–ª–∏ Flask - –≤–µ–±-—Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∏)
  ‚Ä¢  Go: https://go.dev/
  ‚Ä¢  PHP: https://www.php.net/ (Laravel - —Ñ—Ä–µ–π–º–≤–æ—Ä–∫)

–Ø —á–µ—Å—Ç–Ω–æ –Ω–µ —Ö–æ—Ç–µ–ª –≤–ø–∏—Å—ã–≤–∞—Ç—å –≤ –±–µ–∫ –∫–∞–∫–∏–µ –ª–∏–±–æ —è–ø, –ø–æ—Ç–æ–º—É —á—Ç–æ —É —Ä–∞–∑–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ —Ä–∞–∑–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∏ –±–µ–≥–∞—Ç—å –æ—Ç —è–∑—ã–∫–∞ –∫ —è–∑—ã–∫—É —Ç–∞–∫–æ–µ —Å–µ–±–µ. –û–ø—è—Ç—å –∂–µ —á–∏—Ç–∞–π—Ç–µ –ú–µ—Ç–∞–Ω–∏—Ç–∞ –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞–ª–∫—É.

‚Ä¢  –ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:
  ‚Ä¢  MySQL (https://www.youtube.com/watch?v=ERZoxHuQ-QI&list=PLDyJYA6aTY1lPhlF2iHiLlkDW6bd39VmE&ab_channel=%D0%A8%D0%BA%D0%BE%D0%BB%D0%B0itProger%2F%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5): https://www.mysql.com/,

4. DevOps & Deployment:

‚Ä¢  Docker: https://www.docker.com/ (–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∞—Ü–∏—è)
‚Ä¢  CI/CD (Continuous Integration/Continuous Deployment): (–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è)

5. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ (–ø–æ–ª–µ–∑–Ω—ã–µ –Ω–∞–≤—ã–∫–∏):

‚Ä¢  Testing (Unit, Integration, E2E): https://www.browserstack.com/guide/types-of-software-testing (–≤–∏–¥—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
‚Ä¢  Performance Optimization: (–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏)
‚Ä¢  Design Patterns: (—à–∞–±–ª–æ–Ω—ã –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
‚Ä¢  Clean Code: (—á–∏—Å—Ç—ã–π –∫–æ–¥)
‚Ä¢  Agile/Scrum: (–º–µ—Ç–æ–¥–æ–ª–æ–≥–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)

 –≠—Ç–æ—Ç Roadmap - —ç—Ç–æ –æ—Ä–∏–µ–Ω—Ç–∏—Ä. –ù–µ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –≤—Å–µ –∏ —Å—Ä–∞–∑—É. –ù–∞—á–Ω–∏—Ç–µ —Å –æ—Å–Ω–æ–≤, –≤—ã–±–∏—Ä–∞–π—Ç–µ —Ç–æ, —á—Ç–æ –≤–∞–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –∏ –∏–¥–∏—Ç–µ –ø–æ —Å–≤–æ–µ–π –≤–µ—Ç–∫–µ –∂–µ–ª–∞–µ–º–æ–≥–æ.
`}</pre>
                  </div>
                </div>
              </div>

              <div>
                <div className="slide-content">
                  <h2>Live Playground</h2>
                  <div className="playground-editor">
                    <Sandpack
                      template="react"
                      theme="dark"
                      options={{
                        showNavigator: false,
                        showTabs: false,
                        showLineNumbers: true,
                        wrapContent: true,
                      }}
                      files={{
                        "/App.js": {
                          code: `import React, { useState } from "react";
export default function App() {
  const [count, setCount] = useState(0);
  return (
    <div>
      <h3>Live Playground üëã</h3>
      <button onClick={() => setCount(count + 1)}>
        –ö–ª–∏–∫–Ω—É–ª–∏ {count} —Ä–∞–∑
      </button>
    </div>
  );
}
`,
                          active: true,
                        },
                      }}
                    />
                  </div>
                </div>
              </div>

              <div>
                <div className="slide-content">
                  <h2>–ë—É–¥—É—â–∏–µ —Ñ–∏—á–∏</h2>
                  <ul>
                    <li>3D-–æ–±—ä–µ–∫—Ç—ã (Three.js, –≤–∞—É-—ç—Ñ—Ñ–µ–∫—Ç)</li>
                    <li>API-–¥–µ–º–æ (open-source –ø—Ä–æ–µ–∫—Ç—ã)</li>
                    <li>GitHub-—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</li>
                    <li>–°—á—ë—Ç—á–∏–∫ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π</li>
                  </ul>
                  <div style={{marginTop: '2rem', textAlign: 'center'}}>
                    <img
                      src="https://github-readme-stats.vercel.app/api?username=aogiriqg&show_icons=true&theme=tokyonight"
                      alt="GitHub stats"
                      style={{ maxWidth: 400, width: '100%', borderRadius: 12 }}
                    />
                  </div>
                </div>
              </div>
            </Carousel>
          </main>
          <footer>
            <p>¬© 2025 mitzumov. –°–¥–µ–ª–∞–Ω–æ —Å –¥—É—à–æ–π –∏ –∑–≤–µ–∑–¥–∞–º–∏. <a href="https://github.com/mitzumov" style={{color:'#7f8fff',textDecoration:'underline'}}>GitHub</a></p>
          </footer>
        </>
      )}
    </div>
  );
}

export default App;

